{{>partial_header}}
package {{packageName}}

import (
	"github.com/go-chi/chi/v5/middleware"
	"go.uber.org/zap"
	"net/http"
	"time"
)

func Logger() func(next http.Handler) http.Handler {
	return func(next http.Handler) http.Handler {
		fn := func(w http.ResponseWriter, r *http.Request) {
			ww := middleware.NewWrapResponseWriter(w, r.ProtoMajor)

			ctxBuilder := mustGetContextBuilder(r)

			ctxBuilder.Logger().Info("started processing request")

			t1 := time.Now()

			next.ServeHTTP(ww, r)

			ctxBuilder.Logger().Info("finished processing request",
				zap.Duration("elapsed_sec", time.Since(t1)),
				zap.Int("status", ww.Status()),
				zap.Int("size", ww.BytesWritten()),
			)
		}
		return http.HandlerFunc(fn)
	}
}
