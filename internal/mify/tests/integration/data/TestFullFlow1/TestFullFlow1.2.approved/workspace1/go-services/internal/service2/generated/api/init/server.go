// THIS FILE IS AUTOGENERATED, DO NOT EDIT
// Generated by mify via OpenAPI Generator

package openapi_init

import (
	"net/http"

	"github.com/go-chi/chi/v5"
	"go.uber.org/zap"

	"example.com/namespace/workspace1/go-services/internal/pkg/generated/configs"
	"example.com/namespace/workspace1/go-services/internal/service2/generated/core"
)

type ServerConf struct {
	ServerEndpoint string `envconfig:"SERVICE2_SERVER_ENDPOINT" default:":40335"`
}

func getServerConf(conf *configs.MifyStaticConfig) *ServerConf {
	return conf.MustGetPtr((*ServerConf)(nil)).(*ServerConf)
}

func RunServer(ctx *core.MifyServiceContext, router chi.Router) error {
	conf := getServerConf(ctx.StaticConfig())
	ctx.Logger().Info("starting server", zap.String("endpoint", conf.ServerEndpoint))
	err := http.ListenAndServe(conf.ServerEndpoint, router)
	if err != nil {
		ctx.Logger().Error("failed to listen", zap.Error(err))
		return err
	}
	return nil
}
